//Q1 Write a C program to find sum and average of given elements in an array.
#include<stdio.h>
void main()
{
int n,i,s=0;
float avg;
printf("Enter the size of an array:\n");
scanf("%d",&n);
int a[n];
printf("Enter the values:\n");
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
for(i=0;i<n;i++)
{
    s=s+a[i];
    
}
avg=s/n;
    printf("sum is %d and avg is %f",s,avg);

}

OUTPUT:
Enter the size of an array:
3
Enter the values:
23
3
4
sum is 30 and avg is 10.000000

Q2 Write a C program to count number of even and odd element in an array.
#include<stdio.h>
void main()
{
int n,i,n1=0,n2=0;
printf("Enter the size of an array:\n");
scanf("%d",&n);
int a[n];
printf("Enter the values:\n");
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
for(i=0;i<n;i++)
{
    if(a[i]%2==0)
    {
        n1++;
    }
    if(a[i]%2!=0)
    {
        n2++;
    }
}
printf("Number of even elements= %d and number of odd elements= %d",n1,n2);
}
OUTPUT:
Enter the size of an array:
4
Enter the values:
1
2
5
7
Number of even elements= 1 and number of odd elements= 3

Q3 Write a C program to calculate frequency of an element in an array.
#include<stdio.h>
void main()
{
    int i,n,a[10],k,c=0;
    printf("Enter the size of an array");
    scanf("%d",&n);
    printf("Enter array elements\n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    
    }
    printf("Enter the number to be checked\n");
    scanf("%d",&k);
    for(i=0;i<n;i++)
    {
        if(a[i]==k)
        {
            c++;
        }
}
printf("Frequency of %d is %d",k,c);
}

OUTPUT:
Enter array elements
1
2
2
3
Enter the number to be checked
2
Frequency of 2 is 2

Q4 Write a C program to input an element k in an array and check whether number of elements greater than, less than and equal to the element k.
#include<stdio.h>
void main()
{
    int i,n,a[10],k,g,l,e;
    g=l=e=0;
    printf("Enter the size of an array\n");
    scanf("%d",&n);
    printf("Enter array elements\n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    
    }
    printf("Enter the number to be checked\n");
    scanf("%d",&k);
    for(i=0;i<n;i++)
    {
        if(a[i]==k)
        {
            g++;
        }
        else if(a[i]<k)
        {
            l++;
        }
        else
        {
        e++;
        }
}
printf("Greater than, less than, equal is %d %d %d",g,l,e);
}

OUTPUT:
Enter the size of an array
4
Enter array elements
1
2
3
4
Enter the number to be checked
3
Greater than, less than, equal is 1 2 1	

Q5 Write a C program to insert an element at a particular position in an array.
#include<stdio.h>
void main()
{
    int n,m,p;
    printf("Enter the size of an array:\n");
    scanf("%d",&n);
    int a[n],i;
    printf("Enter array elements:\n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    
    }
    printf("The elements of an array are:\n");
    for(i=0;i<n;i++)
    {
        printf("%d ",a[i]);
    }
    printf("\nEnter the element to be inserted\n");
    scanf("%d",&m);
    printf("Enter the position at which the element is to be inserted\n");
    scanf("%d",&p);
    for(i=n-1;i>=p-1;i--)
    {
        a[i+1]=a[i];
    }
    a[p-1]=m;
    printf("The elements of an array are:\n");
    for(i=0;i<=n;i++)
    {
        printf("%d ",a[i]);
    }
}


OUTPUT:
Enter the size of an array:
5
Enter array elements:
1
2
3
4
5
The elements of an array are:
1 2 3 4 5
Enter the element to be inserted
9
Enter the position at which the element is to be inserted
4
The elements of an array are:
1 2 3 9 4 5

Q6 Write a C program to delete a particular element in an array.
#include<stdio.h>
void main()
{
    int array[100],position,c,n;

    printf("Enter the size of an array:\n");
    scanf("%d",&n);

    printf("Enter %d elements\n",n);

    for(c=0;c<n;c++)
    scanf("%d",&array[c]);

    printf("Enter the location at which you wish to delete the element\n");
    scanf("%d",&position);

    if(position>=n+1)
    printf("Deletion is not possible");

    else
    {
        for(c=position-1;c<n-1;c++)
        array[c]=array[c+1];

        printf("Resultant array is:\n");

        for(c=0;c<n-1;c++)
        printf("%d\n",array[c]);
    }
    }


OUTPUT:
Enter the size of an array:
5
Enter 5 elements
4
6
7
9
8
Enter the location at which you wish to delete the element
3
Resultant array is:
4
6
9
8

Q7 Write a C program to print the diagonal elements of a matrix.
#include<stdio.h>
void main()
{
    int i;
    int a[3][3]={{1, 2, 3},{4, 5, 6},{7, 8, 9}};
    printf("Diagonal elements of the matrix:\n");
    for(i=0;i<3;i++)
    {
        printf("%d ",a[i][i]);
    }
}

OUTPUT:
Diagonal elements of the matrix:
1 5 9

Q8 Input n*m array and print sum of all elements of that array.
#include<stdio.h>
void main()
{
    int n,m,s=0;
    printf("Enter the number of rows and columns:\n");
    scanf("%d%d",&n,&m);
    int a[n][m],i,j;
    printf("Enter the array elements:\n");
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
             scanf("%d",&a[i][j]);
            s=s+a[i][j];
        }
    }
        printf("Sum of all elements is %d",s);
    
}

OUTPUT:
Enter the number of rows and columns:
2
2
Enter the array elements:
1
2
3
4
Sum of all elements is 10

Q9 Write a C program to find the maximum value of each row in a 2D array.
#include<stdio.h>
int main()
{
    int r,c,max;
    printf("Enter size of 2D array:\n");
    scanf("%d%d",&r,&c);
    int a[r][c],i,j;
    printf("Enter the elements of 2D array:\n");

    for (i = 0; i < r; i++)
    { 
        for ( j = 0; j < c; j++)
        {
           scanf("%d",&a[i][j]);
        }
    }
    max=a[0][0];
    for (i = 0; i < r; i++)
    {  
        for ( j = 0; j < c; j++)
        {
            if(max<a[i][j])
            max=a[i][j];
        }
        printf("Maximum element in row %d is %d\n",i+1,max);
        max=0;
    }
    

}

OUTPUT:
Enter size of 2D array:
2
2
Enter the elements of 2D array:
1
2
3
4
Maximum element in row 1 is 2
Maximum element in row 2 is 4

Q10 Write a C program to find the minimum value of each row in a 2D array.
#include<stdio.h>
int main()
{
    int r,c;
    printf("Enter the size of 2D array:\n");
    scanf("%d%d",&r,&c);
    int a[r][c],i,j;
    printf("Enter the elements of 2D array:\n");
    for (i = 0; i < r; i++)
    { 
        for ( j = 0; j < c; j++)
        {
           scanf("%d",&a[i][j]);
        }
    }
    int min=a[0][0];
    for (i = 0; i < r; i++)
    {  
        min=a[i][0];
        for ( j = 0; j < c; j++)
        {
            if(min>a[i][j])
            min=a[i][j];
        }
        printf("Minimum element in the row %d is %d\n",i+1,min);
    }
}

OUTPUT:
Enter the size of 2D array:
2
2
Enter the elements of 2D array:
1
2
3
4
Minimum element in the row 1 is 1
Minimum element in the row 2 is 3

Q11 Write a C program using function to check whether a number is a palindrome or not.
int palindrome(int);
int main()
{
int n;
printf("Enter a number:\n");
scanf("%d",&n);
int b=palindrome(n);
if(b==n)
{
    printf("Number is a palindrome");
}
else
{
    printf("Number is not a palindrome");
}
return 0;
}
int palindrome(int n)
{
    int r,s=0;
    while(n>0)
    {
        r=n%10;
        s=s*10+r;
        n=n/10;
    }
    return s;
}

OUTPUT:
Enter a number:
121
Number is a palindrome
Enter a number:
123
Number is not a palindrome

Q12 Write a C program using function to check whether a number is prime or not.
#include<stdio.h>
int prime(int);
int main()
{
int n;
printf("Enter a number:\n");
scanf("%d",&n);
int p=prime(n);
if(p==1)
{
    printf("Number is a prime number");
}
else
{
    printf("Number is not a prime number");
}
}
int prime(int n)
{
    int a=1,i;
    for(i=2;i<n/2;i++)
    {
        if(n%i==0)
        {
            a=0;
        }
    }

    return a;
}

OUTPUT:
Enter a number:
2
Number is a prime number
Enter a number:
12
Number is not a prime number

Q13 Write a C program to find maximum and minimum between two numbers using functions.
#include<stdio.h>
int maxmin(int,int);
void main()
{
int n1,n2;
printf("Enter two numbers:\n");
scanf("%d%d",&n1,&n2);
max(n1,n2);
}
void max(int a,int b)
{
if(a>b)
{
    printf("%d is maximum\n",a);
    printf("%d is minimum",b);
}
else if(b>a)
{
    printf("%d is maximum\n",b);
    printf("%d is minimum",a);
}
else
{
    printf("Both are equal");
}
}

 OUTPUT:
Enter two numbers:
2
3
3 is maximum
2 is minimum

Q14 Write a C program to find whether an inputed number is even or odd using functions.
#include<stdio.h>
void evod(int n)
{
    if(n%2==0)
    {
        printf("Even");
    }
    else
    {
        printf("Odd");
    }
}
void main()
{
    int n;
    printf("Enter a number:\n");
    scanf("%d",&n);
    evod(n);
}

OUTPUT:
Enter a number:
4
Even
Enter a number:
5
Odd

Q15 Write a C program to swap two numbers using user defined function.
#include<stdio.h>
void swap()
{
    int a,b;
    printf("Enter two numbers:\n");
    scanf("%d%d",&a,&b);
    printf("Before swapping a=%d and b=%d\n",a,b);
    a=a+b;
    b=a-b;
    a=a-b;
    printf("After swapping a=%d and b=%d",a,b);
}
void main()
{
    swap();
}


OUTPUT:
Enter two numbers:
2
3
Before swapping a=2 and b=3
After swapping a=3 and b=2

Q16 Write a C program to count the total number of single digit and multidigit numbers in an array using function.
#include<stdio.h>
void digits(int[],int);
void main()
{
    int n,i,a[100];
    printf("Enter the size of an array:\n");
    scanf("%d",&n);
    printf("Enter the array elements:\n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    digits(a,n);
}
void digits(int a[],int n)
{
    int i,c=0,m=0;
    for(i=0;i<n;i++)
    {
        if(a[i]<10)
        {
            c++;
        }
        else
        {
            m++;
        }
    }
    printf("Count of single digit number is %d\n",c);
    printf("Count of multidigit number is %d\n",m);
}


OUTPUT:
Enter the size of an array:
5
Enter the array elements:
1
2
3
34
56
Count of single digit number is 3
Count of multidigit number is 2

Q17 Write a C program to print the largest element in each row in a given matrix using function.
#include<stdio.h>
void lar(int[][100],int,int);
int main()
{
    int a[100][100],i,j,m,n;
    printf("Enter number of rows and columns:\n");
    scanf("%d%d",&m,&n);
    printf("Enter elements:\n");
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    lar(a,m,n);
    return 0;
}
void lar(int a[][100],int n,int b)
{
    int i,j,l;
    for(i=0;i<n;i++)
    {
        l=a[i][0];
        for(j=0;j<n;j++)
        {
            if(a[i][j]>l)
            {
                l=a[i][j];
            }
            }
            printf("Largest element of %d row=%d\n",i+1,l);
        }
        return 0;
    }

OUTPUT:
Enter number of rows and columns:
2
2
Enter elements:
1
2
3
4
Largest element of 1 row=2
Largest element of 2 row=4

Q18 Write a C program to calculate the sum and average of n numbers in an array using functions.
#include<stdio.h>
int sum(int[],int);
void main()
{
    int n,i,a[100];
    printf("Enter the size of an array:\n");
    scanf("%d",&n);
    printf("Enter the array elements:\n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }

int b=sum(a,n);
float avg=(float)b/n;
printf("Sum is %d\n",b);
printf("avg is %f\n",avg);
}
int sum(int x[],int p)
{
int s=0,i;
for(i=0;i<p;i++)
{
s=s+x[i];
}
return s;
}


OUTPUT:
Enter the size of an array:
3
Enter the array elements:
1
2
3
Sum is 6
avg is 2.000000



